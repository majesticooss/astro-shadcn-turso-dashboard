---
import { ClientRouter } from "astro:transitions";
import "@/styles/globals.css";
import "@fontsource/geist-mono";
import "@fontsource/geist-sans/100.css";
import "@fontsource/geist-sans/200.css";
import "@fontsource/geist-sans/300.css";
import "@fontsource/geist-sans/400.css";
import "@fontsource/geist-sans/500.css";
import "@fontsource/geist-sans/600.css";
import "@fontsource/geist-sans/700.css";
import "@fontsource/geist-sans/800.css";
import "@fontsource/geist-sans/900.css";
---

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta name="x-ua-compatible" content="IE=edge,chrome=1" />
	<meta name="theme-color" content="#ffffff" />
	<meta name="msapplication-TileColor" content="#ffffff" />
	<meta name="publisher" content="Majestico" />
	<meta name="generator" content={Astro.generator} />

	<ClientRouter />

	<script is:inline>
		const getThemePreference = () => {
			if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
				return localStorage.getItem('theme');
			}
			return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
		};
		const isDark = getThemePreference() === 'dark';
		document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

		if (typeof localStorage !== 'undefined') {
			const observer = new MutationObserver(() => {
				const isDark = document.documentElement.classList.contains('dark');
				localStorage.setItem('theme', isDark ? 'dark' : 'light');
			});
			observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
		}
	</script>

	<slot />
</head>
